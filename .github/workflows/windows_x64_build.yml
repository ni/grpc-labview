name: Windows x64 build

on:
  workflow_call:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1.4.1

    - name: Update Submodules
      working-directory: ${{runner.workspace}}/grpc-labview      
      run: git submodule update --init --recursive
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: mkdir ${{runner.workspace}}\grpc-labview\build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}\grpc-labview\build
      run: cmake ..

    - name: Build
      working-directory: ${{runner.workspace}}\grpc-labview\build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Tar Build Artifacts
      if: ${{ github.ref == 'refs/heads/master' }}
      run: >-
        tar -czvf labview-grpc-server-windows-x64.tar.gz -C ${{runner.workspace}}\grpc-labview\build\Release
        labview_grpc_server.dll
        labview_grpc_generator.dll
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        name: labview-grpc-server-windows-x64
        path: labview-grpc-server-windows-x64.tar.gz
        retention-days: 5